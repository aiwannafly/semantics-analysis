# text =   В нашем случае цель была сформулирована как повышение эффективности поиска кандидатов.
В O
нашем O
случае O
цель O
была O
сформулирована O
как O
повышение B-Task
эффективности I-Task
поиска I-Task
кандидатов I-Task
. O

# text =   Основная задача здесь — найти эффективный способ отображения соответствия кандидатов и навыков.
Основная O
задача O
здесь O
— O
найти B-Task
эффективный I-Task
способ I-Task
отображения I-Task
соответствия I-Task
кандидатов I-Task
и I-Task
навыков I-Task
. O

# text =   Кодирование в переменные — One-Hot Encoding (OHE) 
Кодирование O
в O
переменные O
— O
One B-Method
- I-Method
Hot I-Method
Encoding I-Method
( O
OHE B-ShortName
) O

# text =   Для этого используют метод TF-IDF.
Для O
этого O
используют O
метод O
TF B-Metric
- I-Metric
IDF B-Metric
. O

# text =   Соответственно, можно схлопнуть похожие навыки в некоторые факторы/компоненты/латентные признаки.
Соответственно O
, O
можно O
схлопнуть O
похожие O
навыки O
в O
некоторые O
факторы B-Object
/ O
компоненты B-Object
/ O
латентные B-Object
признаки I-Object
. O

# text =   Одним из подходов, позволяющих находить такие компоненты, является группа методов матричной факторизации.
Одним O
из O
подходов O
, O
позволяющих O
находить O
такие O
компоненты B-Object
, O
является O
группа O
методов B-Method
матричной I-Method
факторизации I-Method
. O

# text =   Полученные представления кандидатов и навыков называют эмбедингами.
Полученные O
представления O
кандидатов O
и O
навыков O
называют O
эмбедингами B-Object
. O

# text =   При создании нашей системы рекомендации кандидатов на позиции мы использовали нейронную сеть — StarSpace.
При O
создании O
нашей O
системы O
рекомендации O
кандидатов O
на O
позиции O
мы O
использовали O
нейронную B-Method
сеть I-Method
— O
StarSpace B-Network
. O

# text =  Другая группа методов, позволяющая решать задачи репрезентации сущностей — репрезентация графов.
Другая O
группа O
методов O
, O
позволяющая O
решать O
задачи B-Task
репрезентации I-Task
сущностей I-Task
— O
репрезентация B-Task
графов I-Task
. O

# text =   Но большинство методов графовой репрезентации работает с одномодальными графами, поэтому обычно двухмодальные графы следует трансформировать в граф, где узлы представлены одним видом сущностей.
Но O
большинство O
методов B-Method
графовой I-Method
репрезентации I-Method
работает O
с O
одномодальными B-Object
графами I-Object
, O
поэтому O
обычно O
двухмодальные B-Object
графы I-Object
следует O
трансформировать O
в O
граф O
, O
где O
узлы O
представлены O
одним O
видом O
сущностей O
. O

# text =   В первую очередь рассмотрим метод, основанный на графовой факторизации.
В O
первую O
очередь O
рассмотрим O
метод O
, O
основанный O
на O
графовой B-Method
факторизации I-Method
. O

# text =   Это группа методов очень похожа на методы, применяемые для репрезентации текстов — w2v (skip-gram), doc2vec.
Это O
группа O
методов O
очень O
похожа O
на O
методы O
, O
применяемые O
для O
репрезентации O
текстов O
— O
w2v B-Method 
( O
skip B-Method
- I-Method
gram I-Method
) O
, O
doc2vec B-Method
. O

# text =   Почитать подробнее про подобные методы графовой репрезентации можно, например, тут — DeepWalk, Node2vec, Graph2vec.
Почитать O
подробнее O
про O
подобные O
методы O
графовой O
репрезентации O
можно O
, O
например O
, O
тут O
— O
DeepWalk B-Method
, O
Node2vec B-Method
, O
Graph2vec B-Method
. O

# text =   Сверточные сети на графах (Graph Convolutional Networks).
Сверточные O
сети O
на O
графах O
( O
Graph B-Method
Convolutional I-Method
Networks I-Method
) O
. O

# text =   Для задачи репрезентации графов связей между сущностями мы использовали фреймворк PyTorch BigGraph — это ещё один фреймворк от Facebook Research.
Для O
задачи O
репрезентации B-Task
графов I-Task
связей I-Task
между I-Task
сущностями I-Task
мы O
использовали O
фреймворк O
PyTorch B-Application
BigGraph I-Application
— O
это O
ещё O
один O
фреймворк O
от O
Facebook B-Organization
Research I-Organization
. O
