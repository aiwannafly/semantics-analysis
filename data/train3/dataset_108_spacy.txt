# text = Как отличить хороший ремонт от плохого, или как мы в SRG сделали из Томита-парсера многопоточную Java-библиотеку. 
Как O
отличить O
хороший O
ремонт O
от O
плохого O
, O
или O
как O
мы O
в O
SRG B-TERM
сделали O
из O
Томита B-TERM
- I-TERM
парсера I-TERM
многопоточную O
Java B-TERM
- I-TERM
библиотеку I-TERM
. O

# text = В этой статье речь пойдет о том, как мы интегрировали разработанный Яндексом Томита-парсер в нашу систему, превратили его в динамическую библиотеку, подружили с Java, сделали многопоточной и решили с её помощью задачу классификации текста для оценки недвижимости.
В O
этой O
статье O
речь O
пойдет O
о O
том O
, O
как O
мы O
интегрировали O
разработанный O
Яндексом B-TERM
Томита B-TERM
- I-TERM
парсер I-TERM
в O
нашу O
систему O
, O
превратили O
его O
в O
динамическую O
библиотеку O
, O
подружили O
с O
Java B-TERM
, O
сделали O
многопоточной O
и O
решили O
с O
её O
помощью O
задачу O
классификации B-TERM
текста O
для O
оценки B-TERM
недвижимости I-TERM
. O

# text =  Итак, у нас есть текст объявления, который необходимо классифицировать в одну из категорий согласно состоянию ремонта в квартире (без отделки, чистовой, средний, хороший, отличный, эксклюзивный).
Итак O
, O
у O
нас O
есть O
текст B-TERM
объявления I-TERM
, O
который O
необходимо O
классифицировать O
в O
одну O
из O
категорий O
согласно O
состоянию O
ремонта O
в O
квартире O
( O
без O
отделки O
, O
чистовой O
, O
средний O
, O
хороший O
, O
отличный O
, O
эксклюзивный O
) O
. O

# text =  Таким образом, по мере решения сформировалась вторая большая и интересная задача — научиться извлекать всю достаточную и необходимую информацию о ремонте из объявления, а именно обеспечить быстрый синтаксический и морфологический анализ текста, который сможет работать параллельно под нагрузкой в режиме библиотеки.
Таким O
образом O
, O
по O
мере O
решения O
сформировалась O
вторая O
большая O
и O
интересная O
задача O
— O
научиться O
извлекать B-TERM
всю I-TERM
достаточную I-TERM
и I-TERM
необходимую I-TERM
информацию I-TERM
о O
ремонте O
из O
объявления O
, O
а O
именно O
обеспечить O
быстрый O
синтаксический O
и O
морфологический B-TERM
анализ I-TERM
текста I-TERM
, O
который O
сможет O
работать O
параллельно O
под O
нагрузкой O
в O
режиме O
библиотеки O
. O

# text =  Из доступных средств для извлечения фактов из текста на основе контекстно-свободных грамматик, способных работать с русским языком, наше внимание привлекли Томита-парсер и библиотека Yagry на питоне.
Из O
доступных O
средств O
для O
извлечения B-TERM
фактов I-TERM
из O
текста B-TERM
на O
основе O
контекстно B-TERM
- I-TERM
свободных I-TERM
грамматик I-TERM
, O
способных O
работать O
с O
русским O
языком O
, O
наше O
внимание O
привлекли O
Томита B-TERM
- I-TERM
парсер I-TERM
и O
библиотека O
Yagry B-TERM
на O
питоне O
. O

# text =  Многопоточный вариант Томиты — TomitaPooledParser использует для парсинга пул объектов TomitaParser, одинаковым образом сконфигурированных.
Многопоточный O
вариант O
Томиты B-TERM
— O
TomitaPooledParser B-TERM
использует O
для O
парсинга B-TERM
пул O
объектов O
TomitaParser B-TERM
, O
одинаковым O
образом O
сконфигурированных O
. O

# text =  Приведу только показатели качества классификации, которые были нами получены на тестах: Accuracy = 95% F1 score = 93%
Приведу O
только O
показатели O
качества O
классификации B-TERM
, O
которые O
были O
нами O
получены O
на O
тестах O
: O
Accuracy B-TERM
= O
95 B-TERM
% I-TERM

F1 B-TERM
score I-TERM
= O
93 B-TERM
% I-TERM
