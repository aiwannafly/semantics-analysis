# text =  Сбер создал и опубликовал в открытом доступе программную библиотеку PyTorch-LifeStream, содержащую несколько алгоритмов построения эмбеддингов событийных данных.
Сбер B-TERM
создал O
и O
опубликовал O
в O
открытом O
доступе O
программную O
библиотеку O
PyTorch B-TERM
- I-TERM
LifeStream I-TERM
, O
содержащую O
несколько O
алгоритмов O
построения O
эмбеддингов O
событийных O
данных O
. O

# text =  Эмбеддинг (Embedding) – преобразования сложноструктурированных данных,  например слов, текстов, атрибутов событий, событий и их последовательностей, в машинно-читаемый набор чисел – числовой вектор.Событийные данные – разные последовательности.
Эмбеддинг B-TERM
( O
Embedding B-TERM
) O
– O
преобразования O
сложноструктурированных O
данных O
, O
   O
например O
слов O
, O
текстов O
, O
атрибутов O
событий O
, O
событий O
и O
их O
последовательностей O
, O
в O
машинно O
- O
читаемый O
набор O
чисел O
– O
числовой O
вектор O
. O
Событийные O
данные O
– O
разные O
последовательности O
. O

# text =  Самой популярной из трёх задач соревнования стала главная – Matching.
Самой O
популярной O
из O
трёх O
задач O
соревнования O
стала O
главная O
– O
Matching B-TERM
. O

# text =  Стоит отметить, что и для них всё было непросто – конкурсная задача матчинга позволила удачно применить разработанный в Лаборатории ИИ метод генерации эмбеддингов транзакционных данных одновременно для двух разных доменов событийных данных (транзакции и кликстрим – атрибуты посещения веб-страниц). 
Стоит O
отметить O
, O
что O
и O
для O
них O
всё O
было O
непросто O
– O
конкурсная O
задача O
матчинга O
позволила O
удачно O
применить O
разработанный O
в O
Лаборатории B-TERM
ИИ I-TERM
метод B-TERM
генерации I-TERM
эмбеддингов I-TERM
транзакционных I-TERM
данных I-TERM
одновременно O
для O
двух O
разных O
доменов O
событийных O
данных O
( O
транзакции B-TERM
и O
кликстрим B-TERM
– O
атрибуты O
посещения O
веб O
- O
страниц O
) O
. O

# text =  Победители создали лучшее решение благодаря применению собственной библиотеки PyTorch-LifeStream, которая позволила ускорить разработку решения, так как содержит много готовых инструментов для работы с событийными данными, и дала возможность стать фаворитом престижного конкурса. 
Победители O
создали O
лучшее O
решение O
благодаря O
применению O
собственной O
библиотеки O
PyTorch B-TERM
- I-TERM
LifeStream I-TERM
, O
которая O
позволила O
ускорить O
разработку O
решения O
, O
так O
как O
содержит O
много O
готовых O
инструментов O
для O
работы O
с O
событийными O
данными O
, O
и O
дала O
возможность O
стать O
фаворитом O
престижного O
конкурса O

# text =  Фичи для транзакций и кликов объединялись и подавались в алгоритм бустинга.
Фичи O
для O
транзакций O
и O
кликов O
объединялись O
и O
подавались O
в O
алгоритм O
бустинга B-TERM
. O

# text =  Алгоритм обучался как задача бинарной классификации.
Алгоритм O
обучался O
как O
задача B-TERM
бинарной I-TERM
классификации I-TERM
. O

# text =  Команда решила использовать схему обучения, похожую на сиамскую сеть.
Команда O
решила O
использовать O
схему O
обучения O
, O
похожую O
на O
сиамскую B-TERM
сеть I-TERM
. O

# text =  Метки использованы для выборки положительных и отрицательных образцов для функции потерь Softmax Loss.
Метки O
использованы O
для O
выборки O
положительных O
и O
отрицательных O
образцов O
для O
функции O
потерь O
Softmax B-TERM
Loss I-TERM
. O

# text =  SequenceEncoder – рекурентно-нейронная сеть (RNN), совместно используемая для транзакций и кликов.
SequenceEncoder B-TERM
– O
рекурентно B-TERM
- I-TERM
нейронная I-TERM
сеть I-TERM
( O
RNN B-TERM
) O
, O
совместно O
используемая O
для O
транзакций O
и O
кликов O
. O

# text =  В итоге это дало самый большой прирост качества: для ансамбля из пяти моделей метрика качества R1 выросла с 0.2819 до 0.2949.
В O
итоге O
это O
дало O
самый O
большой O
прирост O
качества O
: O
для O
ансамбля O
из O
пяти O
моделей O
метрика O
качества O
R1 B-TERM
выросла O
с O
0.2819 B-TERM
до O
0.2949 B-TERM
. O
