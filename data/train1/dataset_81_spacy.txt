# text =  Однажды нам понадобилось выбрать синтаксический парсер для работы с русским языком.
Однажды O
нам O
понадобилось O
выбрать O
синтаксический B-TERM
парсер I-TERM
для O
работы O
с O
русским O
языком O
. O

# text =  Для этого мы углубились в дебри морфологии и токенизации, протестировали разные варианты и оценили их применение.
Для O
этого O
мы O
углубились O
в O
дебри O
морфологии B-TERM
и O
токенизации B-TERM
, O
протестировали O
разные O
варианты O
и O
оценили O
их O
применение O
. O

# text =  В первой строке предложение разобрано в рамках грамматики зависимостей.
В O
первой O
строке O
предложение O
разобрано O
в O
рамках O
грамматики B-TERM
зависимостей I-TERM
. O

# text =  Во второй строке разбор идет в соответствии с грамматикой непосредственно составляющих.
Во O
второй O
строке O
разбор O
идет O
в O
соответствии O
с O
  O
грамматикой B-TERM
непосредственно I-TERM
составляющих I-TERM
. O

# text =  Поэтому в автоматическом парсинге русского языка принято работать исходя из грамматики зависимостей.
Поэтому O
в O
автоматическом B-TERM
парсинге I-TERM
русского B-TERM
языка O
принято O
работать O
исходя O
из O
грамматики O
зависимостей O
. O

# text =  Чтобы облегчить себе выбор парсера, мы обратили свой взгляд на проект Universal Dependencies и недавно прошедшее в его рамках соревнование CoNLL Shared Task.
Чтобы O
облегчить O
себе O
выбор O
парсера O
, O
мы O
обратили O
свой O
взгляд O
на O
проект O
Universal B-TERM
Dependencies I-TERM
и O
недавно O
прошедшее O
в O
его O
рамках O
соревнование O
CoNLL O
Shared O
Task O
. O

# text =  Universal Dependencies — это проект по унификации разметки синтаксических корпусов (трибанков) в рамках грамматики зависимостей.
Universal B-TERM
Dependencies I-TERM
— O
это O
проект O
по O
унификации B-TERM
разметки I-TERM
синтаксических B-TERM
корпусов I-TERM
( O
трибанков B-TERM
) O
в O
рамках O
грамматики B-TERM
зависимостей I-TERM
. O

# text =  Мы можем оценивать, правильно ли нашли вершину слова — метрика UAS (Unlabeled attachment score).
Мы O
можем O
оценивать O
, O
правильно O
ли O
нашли O
вершину O
слова O
— O
метрика O
UAS B-TERM
( O
Unlabeled B-TERM
attachment I-TERM
score I-TERM
) O
. O

# text =  Или оценивать, правильно ли найдена как вершина, так и тип зависимости — метрика LAS (Labeled attachment score).
Или O
оценивать O
, O
правильно O
ли O
найдена O
как O
вершина O
, O
так O
и O
тип O
зависимости O
— O
метрика O
LAS B-TERM
( O
Labeled B-TERM
attachment I-TERM
score I-TERM
) O
. O

# text =  Казалось бы, здесь напрашивается оценка точности (accuracy) — считаем, сколько раз мы попали из общего количества случаев.
Казалось O
бы O
, O
здесь O
напрашивается O
оценка O
точности B-TERM
( O
accuracy B-TERM
) O
— O
считаем O
, O
сколько O
раз O
мы O
попали O
из O
общего O
количества O
случаев O
. O

# text =  Разработчики, решающие задачи автоматического парсинга, часто берут на вход сырой текст, который в соответствии с пирамидой анализа проходит этапы токенизации и морфологического анализа.
Разработчики O
, O
решающие O
задачи O
автоматического B-TERM
парсинга I-TERM
, O
часто O
берут O
на O
вход O
сырой O
текст O
, O
который O
в O
соответствии O
с O
пирамидой O
анализа O
проходит O
этапы O
токенизации B-TERM
и O
морфологического B-TERM
анализа I-TERM
. O

# text =  Поэтому формулой оценки в данном случае является ф-мера, где точность (precision) — доля точных попаданий относительно общего числа предсказаний, а полнота — доля точных попаданий относительно числа связей в размеченных данных.
Поэтому O
формулой O
оценки O
в O
данном O
случае O
является O
ф B-TERM
- I-TERM
мера I-TERM
, O
где O
точность B-TERM
( O
precision B-TERM
) O
— O
доля O
точных O
попаданий O
относительно O
общего O
числа O
предсказаний O
, O
а O
полнота B-TERM
— O
доля O
точных O
попаданий O
относительно O
числа O
связей O
в O
размеченных O
данных O
. O

# text =  Очевидно, что все эксперименты проводятся на SynTagRus (разработка ИППИ РАН), в котором более миллиона токенов.
Очевидно O
, O
что O
все O
эксперименты O
проводятся O
на O
SynTagRus B-TERM
( O
разработка O
ИППИ B-TERM
РАН I-TERM
) O
, O
в O
котором O
более O
миллиона O
токенов B-TERM
. O

# text =  По итогам соревнования прошлого года модели, которые обучались на одном и том же SynTagRus, достигли следующих показателей LAS:
По O
итогам O
соревнования O
прошлого O
года O
модели O
, O
которые O
обучались O
на O
одном O
и O
том O
же O
SynTagRus B-TERM
, O
достигли O
следующих O
показателей O
LAS B-TERM
: O

# text =  Забегая вперед, заметим, что новая версия UDPipe (Future) оказалась еще выше в этом году.
Забегая O
вперед O
, O
заметим O
, O
что O
новая O
версия O
UDPipe B-TERM
( O
Future B-TERM
) O
оказалась O
еще O
выше O
в O
этом O
году O
. O

# text =  В список не вошел Syntaxnet — парсер Google.
В O
список O
не O
вошел O
Syntaxnet B-TERM
— O
парсер O
Google B-TERM
. O

# text =  Ответ прост: Syntaxnet начинался лишь с этапа морфологического анализа.
Ответ O
прост O
: O
Syntaxnet B-TERM
начинался O
лишь O
с O
этапа O
морфологического B-TERM
анализа I-TERM
. O

# text =  В качестве начальных данных у нас есть табличка выше с лидирующим Syntaxnet и с UDPipe 2.0 где-то на 7 месте.
В O
качестве O
начальных O
данных O
у O
нас O
есть O
табличка O
выше O
с O
лидирующим O
Syntaxnet B-TERM
и O
с O
UDPipe B-TERM
2.0 I-TERM
где O
- O
то O
на O
7 O
месте O
. O

# text =  Синтаксис, разумеется, далеко не единственный модуль «под капотом» real-time системы, поэтому тратить на него больше десятка миллисекунд не стоит.
Синтаксис B-TERM
, O
разумеется O
, O
далеко O
не O
единственный O
модуль O
« O
под O
капотом O
» O
real B-TERM
- I-TERM
time I-TERM
системы O
, O
поэтому O
тратить O
на O
него O
больше O
десятка O
миллисекунд O
не O
стоит O
. O

# text =  Для русского языка у нас есть достаточно хорошие морфологические анализаторы, которые могут встроиться в нашу пирамиду.
Для O
русского O
языка O
у O
нас O
есть O
достаточно O
хорошие O
морфологические B-TERM
анализаторы I-TERM
, O
которые O
могут O
встроиться O
в O
нашу O
пирамиду O
. O

# text =  Затем начинает работу теггер — штука, которая предсказывает морфологические свойства токена: в каком падеже слово стоит, в каком числе.
Затем O
начинает O
работу O
теггер B-TERM
— O
штука O
, O
которая O
предсказывает O
морфологические B-TERM
свойства I-TERM
токена O
: O
в O
каком O
падеже O
слово O
стоит O
, O
в O
каком O
числе O
. O

# text =  В UDPipe есть еще лемматизатор, который подбирает для слов начальную форму.
В O
UDPipe B-TERM
есть O
еще O
лемматизатор B-TERM
, O
который O
подбирает O
для O
слов O
начальную B-TERM
форму I-TERM
. O

# text =  UDPipe — это transition-based архитектура: она работает быстро, за линейное время проходя по всем токенам один раз.
UDPipe B-TERM
— O
это O
transition B-TERM
- I-TERM
based I-TERM
архитектура O
: O
она O
работает O
быстро O
, O
за O
линейное O
время O
проходя O
по O
всем O
токенам B-TERM
один O
раз O
. O

# text =  RightArc — то же самое, но зависимость строится в другую сторону, и отбрасывается верхушка.
RightArc B-TERM
— O
то O
же O
самое O
, O
но O
зависимость O
строится O
в O
другую O
сторону O
, O
и O
отбрасывается O
верхушка O
. O

# text =  У классических transition-based parser возможны три операции, перечисленные выше: стрелка в одну сторону, стрелка в другую сторону и шифт.
У O
классических O
transition B-TERM
- I-TERM
based I-TERM
parser I-TERM
возможны O
три O
операции O
, O
перечисленные O
выше O
: O
стрелка O
в O
одну O
сторону O
, O
стрелка O
в O
другую O
сторону O
и O
шифт O
. O

# text =  Анализатор Mystem (разработка яндекса) в определении частей речи достигает лучших результатов, чем UDPipe.
Анализатор O
Mystem B-TERM
( O
разработка O
яндекса B-TERM
) O
в O
определении O
частей O
речи O
достигает O
лучших O
результатов O
, O
чем O
UDPipe B-TERM
. O

# text =  Многие знают, что Mystem не полностью понимает морфологическую омонимию.
Многие O
знают O
, O
что O
Mystem B-TERM
не O
полностью O
понимает O
морфологическую B-TERM
омонимию I-TERM
. O

# text =  При помощи анализатора RNNMorph.
При O
помощи O
анализатора O
RNNMorph B-TERM
. O

# text =  Про него мало кто слышал, но в прошлом году он выиграл соревнование среди морфологических анализаторов, проводившееся в рамках конференции «Диалог».
Про O
него O
мало O
кто O
слышал O
, O
но O
в O
прошлом O
году O
он O
выиграл O
соревнование O
среди O
морфологических B-TERM
анализаторов I-TERMS
, O
проводившееся O
в O
рамках O
конференции O
« O
Диалог O
» O
. O

# text =  Хотя если сравнивать их чисто на уровне качества морфологической разметки (данные с MorphoRuEval-2017), то проигрыш получается значительный — порядка 15%, если считать accuracy по словам.
Хотя O
если O
сравнивать O
их O
чисто O
на O
уровне O
качества O
морфологической B-TERM
разметки I-TERM
( O
данные O
с O
MorphoRuEval-2017 O
) O
, O
то O
проигрыш O
получается O
значительный O
— O
порядка O
15 O
% O
, O
если O
считать O
accuracy B-TERM
по O
словам O
. O

# text =  Дальше буду сравнивать нас с Syntaxnet и остальными алгоритмами.
Дальше O
буду O
сравнивать O
нас O
с O
Syntaxnet B-TERM
и O
остальными O
алгоритмами O
. O

# text =  Интересно, что мы почти дотянулись по метрике LAS до версии Syntaxnet.
Интересно O
, O
что O
мы O
почти O
дотянулись O
по O
метрике O
LAS B-TERM
до O
версии O
Syntaxnet B-TERM
. O

# text =  В архитектуре стенфордского парсера и Syntaxnet заложена другая концепия: сначала они генерируют полный ориентированный граф, и дальше работа алгоритма состоит в том, чтобы оставить тот скелет (минимальное остовное дерево), который будет наиболее вероятным.
В O
архитектуре O
стенфордского O
парсера O
и O
Syntaxnet B-TERM
заложена O
другая O
концепия O
: O
сначала O
они O
генерируют O
полный O
ориентированный B-TERM
граф I-TERM
, O
и O
дальше O
работа O
алгоритма O
состоит O
в O
том O
, O
чтобы O
оставить O
тот O
скелет O
( O
минимальное B-TERM
остовное I-TERM
дерево I-TERM
) O
, O
который O
будет O
наиболее O
вероятным O
. O
